# ---------------------------------------------------------------------------------------------
# MIT License
#
# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ---------------------------------------------------------------------------------------------

-
  name: "Test module: solace_get_client_profiles"
  hosts: "{{ brokers }}"
  gather_facts: no
  module_defaults:
    solace_client_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      solace_cloud_api_token: "{{ solace_cloud_api_token | default(omit) }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace_get_client_profiles:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"

  tasks:

    - name: Get pre-existing client profiles
      solace_get_client_profiles:
        query_params:
          where:
            - "clientProfileName==ansible-solace__test*"
          select:
            - "clientProfileName"
      register: pre_existing_list

    - name: Print pre-existing list
      debug:
        msg: "{{ pre_existing_list.result_list }}"

    - name: Print count of pre-existing list
      debug:
        msg: "{{ pre_existing_list.result_list_count }}"

    - name: Remove all found client profiles
      solace_client_profile:
        name: "{{ item.clientProfileName }}"
        state: absent
      register: result
      loop: "{{ pre_existing_list.result_list }}"

    - include_vars:
        file: "./lib/vars.json"
        name: target_list

    - name: Adding / updating client profiles
      solace_client_profile:
        name: "{{ item.name }}"
        state: present
      loop: "{{ target_list.clientProfileNames }}"

    - name: Get new client profiles
      solace_get_client_profiles:
        query_params:
          where:
            - "clientProfileName==ansible-solace__test*"
          select:
            - "clientProfileName"
      register: new_list_result

    - name: Print new client profile list
      debug:
        msg: "{{ new_list_result.result_list }}"

    - name: Print count of new client profile list
      debug:
        msg: "{{ new_list_result.result_list_count }}"

    - name: Fail when new client profile list count != 4
      fail:
        msg: "new client profile list count != 4"
      when: new_list_result.result_list_count != 4

    - name: Get Monitor Info for new Client Profiles
      solace_get_client_profiles:
        api: monitor
        query_params:
          where:
            - "clientProfileName==ansible-solace__test*"
          select:
      register: monitor_result

    - name: Print Monitor Info for new Client Profiles
      debug:
        msg: "{{ monitor_result.result_list }}"

    - name: Remove all client profiles again
      solace_client_profile:
        name: "{{ item.name }}"
        state: absent
      register: result
      loop: "{{ target_list.clientProfileNames }}"


    # - debug:
    #     msg: "Ending play"
    # - meta: end_play


###
# The End.
